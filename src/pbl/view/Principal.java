/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbl.view;

import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import pbl.controller.ControllerRelogio;

/**
 *
 * @author marcos
 */
public class Principal extends javax.swing.JFrame {

    private final ControllerRelogio controller;
    private final BotaoAction[] ba = new BotaoAction[2];

    /**
     * Creates new form Principal
     */
    public Principal() {
        
        this.ba[0] = new BotaoAction('h', this);
        this.ba[1] = new BotaoAction('d', this);
        
        initComponents();
        controller = new ControllerRelogio(this);
        registrarAcoesDoTeclado(relogioPanel1);
    }

    private void janelaDrift() {
        TelaDrift td = new TelaDrift(this);
        td.setLocationRelativeTo(null);
        td.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        relogioPanel1 = new pbl.view.RelogioPanel();
        jLabelDrift = new javax.swing.JLabel();
        jLabelID = new javax.swing.JLabel();
        jLabelCoord = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jButton1.setText("Zerar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelDrift.setText("DRIFT: ");

        jLabelID.setText("ID: ");

        jLabelCoord.setText(".");

        jLabel1.setText("D - Alterar Drift     H - Alterar Horário");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelDrift, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCoord, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(relogioPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(relogioPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabelDrift)
                    .addComponent(jLabelID)
                    .addComponent(jLabelCoord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.relogioPanel1.setHorario(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        System.out.println("Press: " + evt.getKeyCode());
    }//GEN-LAST:event_formKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Principal p = new Principal();
            p.setLocationRelativeTo(null);
            p.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCoord;
    private javax.swing.JLabel jLabelDrift;
    private javax.swing.JLabel jLabelID;
    private pbl.view.RelogioPanel relogioPanel1;
    // End of variables declaration//GEN-END:variables

    public long getHorario() {
        return relogioPanel1.getHorario();
    }

    public void setHorarioSeg(long horario) {
        relogioPanel1.setHorario(horario);
    }
    
    public void setHorarioHora(String str){
        relogioPanel1.setHorario(str);
    }

    public void atualizar() {
        jLabelDrift.setText("DRIFT: " + controller.getDrift());
        jLabelID.setText("ID: " + controller.getID());
        jLabelCoord.setText("CO: " + controller.isCoordenador());
    }

    public void setDrift(float drift) {
        this.relogioPanel1.setDrift(drift);
        controller.setDrift(drift);
        atualizar();
    }

    private void registrarAcoesDoTeclado(JPanel painel) {
        //Damos um nome para cada ação. Esse nome é útil pois mais de 
	//uma tecla pode ser associada a cada ação, como veremos abaixo
        ActionMap aMap = painel.getActionMap();
        
        aMap.put("h", this.ba[0]);
        aMap.put("d", this.ba[1]);
        painel.setActionMap(aMap);
        
        //Pegamos o input map que ocorre sempre que a janela atual está em foco
	InputMap imap = painel.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);
        
        
        //Associamos o pressionar das teclas (keystroke) aos eventos.
	//O nome do KeyStroke pode ser obtido através da classe KeyEvent.
	//Lá está cheio de constantes como KeyEvent.VK_NUMPAD1. 
	//Essa string é o nome sem o VK_
	
	//Teclas da parte de cima do teclado.
	imap.put(KeyStroke.getKeyStroke("H"), "h");
	imap.put(KeyStroke.getKeyStroke("D"), "d");
    }
}
