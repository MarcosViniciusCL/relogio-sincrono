/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbl.view;

import java.util.Timer;
import pbl.controller.ControllerConexao;
import pbl.controller.ControllerRelogio;

/**
 *
 * @author marcos
 */
public class RelogioPanel extends javax.swing.JPanel {

    private long tempo;
    private final long tempMax;
    private float drift;
    private ControllerRelogio controller;
    
    private Timer timetask;

    /**
     * Creates new form RelogioPanel
     */
    public RelogioPanel() {
        initComponents();
        tempo = 0;
        tempMax = 86399;
        this.drift = 1;
        iniciarContagem(this.drift);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldMin = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSeg = new javax.swing.JTextField();
        jTextFieldHor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jTextFieldMin.setEditable(false);
        jTextFieldMin.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jTextFieldMin.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setText("HORA");

        jTextFieldSeg.setEditable(false);
        jTextFieldSeg.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextFieldSeg.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextFieldHor.setEditable(false);
        jTextFieldHor.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jTextFieldHor.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setText("MINUTO");

        jLabel3.setText("SEGUNDO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldHor, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMin, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldHor)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addComponent(jTextFieldMin, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarContagem(float drift) {
        if(timetask != null){
            timetask.cancel();
            timetask = null;
        }
        this.timetask = new java.util.Timer();
        long time = (long) (drift*1000);
        timetask.schedule(new java.util.TimerTask() {
           // long maxValor = 3600;
            int aux = 0;

            @Override
            public void run() {
                tempo++; //soma 1 a cada segundo
                aux++;
                atualizar();
                aux = 0;
                if (tempo == tempMax) {
                    tempo = 0;
                }
            }
        }, 0,
                time //tempo, 1000ms = 1segundo
        );
    }

    private void atualizar() {
        if (tempo > tempMax) {
            tempo = 0;
        }
        int seg = (int) tempo % 60;
        int min = (int) tempo / 60;
        int hora = min / 60;
        min %= 60;
        
        jTextFieldSeg.setText("");
        jTextFieldMin.setText("");
        jTextFieldHor.setText("");
        jTextFieldSeg.setText(seg + "");
        jTextFieldMin.setText(min + "");
        jTextFieldHor.setText(hora + "");
    }

    public long getHorario() {
        return tempo;
    }
    
    public void setHorario(long tempo) {
        this.tempo = tempo;
        atualizar();
    }

    public void setHorario(String horario) {
        int hora, auxH, min, auxM, seg, auxS;
        String[] str = horario.split(":");
        hora = Integer.parseInt(str[0]);
        min = Integer.parseInt(str[1]);
        if (str.length == 3) {
            seg = Integer.parseInt(str[2]);
        } else {
            seg = (int) (this.tempo%60);
        }
        
        auxH = 3600*hora;
        auxM = 60*min;
        auxS = seg;
        
        
        setHorario(auxH+auxM+auxS);
    }
    
    public void setDrift(float drift){
        this.drift = drift;
        iniciarContagem(drift);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldHor;
    private javax.swing.JTextField jTextFieldMin;
    private javax.swing.JTextField jTextFieldSeg;
    // End of variables declaration//GEN-END:variables

   
}
